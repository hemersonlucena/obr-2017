'SETUP
Sensor.SetMode(4, 4)
Sensor.SetMode(1, 4)
Sensor.SetMode(2, 0)
Sensor.SetMode(3, 0)


'VARIÁVEIS
MutexPiloto = Thread.CreateMutex()
MutexRampa = Thread.CreateMutex()
NaRampa = "False"
FatorAlinhar = 1
ForcaPadrao = -45
ForcaObstaculo = -20

AberturaObstaculo = 500 'Valor em graus para abertura no desviar após o sensor lateral deixar de detectar o obstáculo
ProfundidadeObstaculo = 750


'VARIÁVEIS INICIALIZADAS
ForcaD = 0
ForcaE = 0
MediaD = 0
MediaE = 0


'FUNÇÕES
Sub ATUALIZARCALIBRAGEM
  Handle = EV3File.OpenRead("OBR/legonautas")
  Calibragem[0] = EV3File.ReadLine(Handle)'Linha 1 -> sensor esquerdo
  Calibragem[1] = EV3File.ReadLine(Handle)'Linha 2 -> sensor direito
  EV3File.Close(Handle)
  Valores[0] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[0], 1, 3))
  Valores[1] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[0], 5, 3))
  Valores[2] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[0], 9, 3))
  Valores[3] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[0], 13, 3))
  Valores[4] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[0], 17, 3))
  Valores[5] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[0], 21, 3))
  Valores[6] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[1], 1, 3))
  Valores[7] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[1], 5, 3))
  Valores[8] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[1], 9, 3))
  Valores[9] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[1], 13, 3))
  Valores[10] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[1], 17, 3))
  Valores[11] = EV3File.ConvertToNumber(Text.GetSubText(Calibragem[1], 21, 3))
EndSub


Sub SEGUIRLINHA
  While "True"
    ATUALIZARCORES()
    CALCULARFORCAS()
    Thread.Lock(MutexPiloto)
    Motor.StartPower("B", ForcaE)
    Motor.StartPower("C", ForcaD)
    Thread.Unlock(MutexPiloto)
  EndWhile  
EndSub


Sub ATUALIZARCORES
  For PortaCor = 1 To 4 Step 3
    Leitura = Sensor.ReadRaw(PortaCor, 3)
    If PortaCor = 1 Then
      Leitura[0] = (100*Leitura[0] - 100*Valores[3])/(Valores[0] - Valores[3])
      Leitura[1] = (100*Leitura[1] - 100*Valores[4])/(Valores[1] - Valores[4])
      Leitura[2] = (100*Leitura[2] - 100*Valores[5])/(Valores[2] - Valores[5])
    Else
      Leitura[0] = (100*Leitura[0] - 100*Valores[9])/(Valores[6] - Valores[9])
      Leitura[1] = (100*Leitura[1] - 100*Valores[10])/(Valores[7] - Valores[10])
      Leitura[2] = (100*Leitura[2] - 100*Valores[11])/(Valores[8] - Valores[11])
    EndIf
    Media = (Leitura[0] + Leitura[1] + Leitura[2])/3
    If Media < 0 Then
      Media = 0 
    ElseIf Media > 100 Then
      Media = 100
    EndIf
    If Media <= 90 And Leitura[1] > Leitura[0] Then
      Media = Media + Math.Abs(Leitura[1] - Leitura[0])*13/2
      If Media > 85 Then
        Media = 85
      EndIf
    EndIf
    If PortaCor = 1 Then
      MediaE = Media
    Else
      MediaD = Media
    EndIf
  VERIFICARVERDE()
  EndFor
  MOSTRARMEDIAS()
EndSub


Sub VERIFICARVERDE
  Bool3 = Leitura[0] < 5 And Leitura[1] > 10
  Bool4 = Leitura[0] < 5 And (Leitura[1] - Leitura[0]) > 6
  If Bool3 Then
    EV3.SetLEDColor("RED", "NORMAL")
  ElseIf Bool4 Then
    EV3.SetLEDColor("GREEN", "NORMAL")
  EndIf
  If Bool3 Or Bool4 Then
    Thread.Lock(MutexPiloto)
    'EV3.SetLEDColor("RED", "NORMAL")
    CURVAVERDE()
    'EV3.SetLEDColor("GREEN", "NORMAL")
    Thread.Unlock(MutexPiloto)
  EndIf
EndSub


Sub CURVAVERDE
  Motor.MoveSync("BC", -40, -40, 180, "True")
  If PortaCor = 1 Then
    Motor.MoveSync("BC", 40, -40, 193, "True")
  Else
    Motor.MoveSync("BC", -40, 40, 193, "True")
  EndIf
EndSub


Sub CALCULARFORCAS
    EV3.SetLEDColor("ORANGE", "NORMAL")
    Diferenca = MediaE - MediaD
    ForcaE = ForcaPadrao
    ForcaD = ForcaPadrao
    Subtrair = ForcaPadrao*Math.Abs(Diferenca/15)
    If Subtrair/ForcaPadrao > 1.8 Then
      Subtrair =  1.8*ForcaPadrao
    EndIf
    If Diferenca <= 0 Then
      ForcaE = ForcaE - Subtrair
    Else
      ForcaD = ForcaD - Subtrair
    EndIf

    If NaRampa Then
      If ForcaE < ForcaD Then 'FORÇA MÁXIMA NA RAMPA
        ForcaD = -75*ForcaD/ForcaE
        ForcaE = -75
      Else
        ForcaE = -75*ForcaE/ForcaD
        ForcaD = -75
      EndIf
      If ForcaE > 0 Then 'NÃO EXISTE MOVIMENTO CONTRÁRIO NA RAMPA
        ForcaE = 0
      ElseIf ForcaD > 0 Then
        ForcaD = 0
      EndIf
    EndIf
EndSub


Sub RAMPA
  While "True"
    Thread.Lock(MutexRampa)
    If Sensor.ReadRawValue(2, 0) < 80 Then
      Program.Delay(750)
      If Sensor.ReadRawValue(2, 0) < 80 Then
        NaRampa = "True"
      EndIf
    EndIf
    Thread.Unlock(MutexRampa)
  EndWhile
EndSub


Sub ALINHAR
  ATUALIZARCORES()
  AlinharInicio = EV3.Time
  While MediaE < 62 Or MediaE > 78 Or MediaD < 62 Or MediaD > 78 Or EV3.Time < AlinharInicio + 4000
    EV3.SetLEDColor("RED", "NORMAL")
    AlinharForcaE = (Math.Power(MediaE, 2) - 5000)/5000
    AlinharForcaD = (Math.Power(MediaD, 2) - 5000)/5000
    AlinharForcaE = AlinharForcaE*ForcaObstaculo
    AlinharForcaD = AlinharForcaD*ForcaObstaculo
    If AlinharForcaE > -12 Or AlinharForcaE < 12 Then
      If AlinharForcaE < 0 Then
        AlinharForcaE = -12
      Else
        AlinharForcaE = 12
      EndIf
    EndIf
    If AlinharForcaD > -12 Or AlinharForcaD < 12 Then
      If AlinharForcaD < 0 Then
        AlinharForcaD = -12
      Else
        AlinharForcaD = 12
      EndIf
    EndIf
    Motor.StartPower("B", AlinharForcaE*FatorAlinhar)
    Motor.StartPower("C", AlinharForcaD*FatorAlinhar)
    ATUALIZARCORES()
  EndWhile
EndSub


Sub MONITORAROBSTACULO
  While "True"
    If Sensor.ReadRawValue(3, 0) < 40 Then
      'SOLICITA CONTROLE E PARA O ROBÔ
      Thread.Lock(MutexPiloto)
      Motor.Stop("BC", "True")
      
      'DESATIVA O MONITORAMENTO DE RAMPA COM O SENSOR LATERAL
      Thread.Lock(MutexRampa)
      
      'GIRA 90º PARA A DIREITA E ALINHA DE RÉ
      Motor.MoveSync("BC", -30, 30, 193, "True")
      FatorAlinhar = -1
      ALINHAR()
      Motor.Stop("BC", "True")
      
      'MOVE-SE DURANTE A QUANTIDADE DE GRAUS ESPECIFICADA EM AberturaObstaculo
      Motor.MoveSync("BC", ForcaObstaculo, ForcaObstaculo, AberturaObstaculo, "True")
      
      'GIRA 90º PARA A ESQUERDA, FICANDO PARALELO AO TRAJETO
      Motor.MoveSync("BC", 30, -30, 205, "True")
      
      'MOVE-SE DURANTE A QUANTIDADE DE GRAUS ESPECIFICADA EM ProfundidadeObstaculo
      Motor.MoveSync("BC", ForcaObstaculo, ForcaObstaculo, ProfundidadeObstaculo, "True")
      
      'GIRA 60º PARA A ESQUERDA, DIRECIONANDO AO TRAJETO
      Motor.MoveSync("BC", 30, -30, 137, "True")
      
      'MOVE O ROBOÔ EM DIREÇÃO AO TRAJETO
      Motor.MoveSync("BC", ForcaObstaculo, ForcaObstaculo, AberturaObstaculo/1.1, "True")
      
      'GIRA 60º PARA A DIREITA, FICANDO EM CIMA DO TRAJETO
      Motor.MoveSync("BC", -30, 30, 137, "True")
      
      'MOVE-SE  PARA TRÁS COM POUQUÍSSIMA FORÇA DURANTE 5s
      Motor.StartPower("BC", -3*ForcaObstaculo/4)
      Program.Delay(5000)
      
      Thread.Unlock(MutexRampa)
      Thread.Unlock(MutexPiloto)
    EndIf
  EndWhile
EndSub


Sub MOSTRARMEDIAS
  LCD.StopUpdate()
  LCD.Clear()
  LCD.Write(10, 10, "E: " + MediaE)
  LCD.Write(10, 30, "D: " + MediaD)
  LCD.Update()
EndSub


'INICIO
ATUALIZARCALIBRAGEM()
Thread.Run = SEGUIRLINHA
Thread.Run = MONITORAROBSTACULO
Thread.Run = RAMPA
While "True"
  Program.Delay(1000)
EndWhile